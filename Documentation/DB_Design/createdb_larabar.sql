-- drop schema if exists laratest ;
create schema if not exists laratest;
use laratest;

CREATE TABLE if not exists jobs (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(255) NOT NULL,
    AUTHOR VARCHAR(255) NOT NULL,
    LOCATION VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    REQUIREMENTS TEXT,
    SALARY DOUBLE DEFAULT NULL,
    CREATE_DATE DATETIME DEFAULT NOW(),
    PRIMARY KEY (ID)
);

CREATE TABLE if not exists users (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    EMAIL VARCHAR(255) UNIQUE NOT NULL,
    PASSWORD VARCHAR(255) BINARY NOT NULL,
    FIRSTNAME VARCHAR(255) DEFAULT NULL,
    LASTNAME VARCHAR(255) DEFAULT NULL,
    ADMIN BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (ID)
);

CREATE TABLE if not exists user_profiles (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    USER_ID INT(11) NOT NULL,
    BIO VARCHAR(10000) DEFAULT NULL,
    IMGURL VARCHAR(500) DEFAULT NULL,
    LOCATION VARCHAR(100) DEFAULT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID)
        REFERENCES users (ID)
);

drop table if exists education;
CREATE TABLE education (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    USER_PROFILE_ID INT(11) DEFAULT NULL,
    INSTITUTION TEXT,
    LEVEL TEXT,
    DEGREE TEXT,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_PROFILE_ID)
        REFERENCES user_profiles (USER_ID)
);

drop table if exists employment_history;
CREATE TABLE employment_history (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    USER_PROFILE_ID INT(11) DEFAULT NULL,
    EMPLOYER TEXT,
    POSITION TEXT,
    DURATION TEXT,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_PROFILE_ID)
        REFERENCES user_profiles (USER_ID)
);

drop table if exists skills;
CREATE TABLE skills (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    USER_PROFILE_ID INT(11) NOT NULL,
    TITLE VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_PROFILE_ID)
         REFERENCES user_profiles (USER_ID)
);

drop table if exists suspended_users;
CREATE TABLE suspended_users (
    ID INT(11) NOT NULL AUTO_INCREMENT,
    USER_ID INT(11) DEFAULT NULL,
    DURATION DATE DEFAULT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID)
        REFERENCES users(ID)
);

CREATE TABLE if not exists groups (
    ID INT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (ID),
    TITLE VARCHAR(50) UNIQUE,
    SUMMARY VARCHAR(255),
    DESCRIPTION TEXT
);

CREATE TABLE if not exists join_user_group (
    ID INT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (ID),
    USER_ID INT,
    GROUP_ID INT,
    FOREIGN KEY (USER_ID)
        REFERENCES users (ID),
    FOREIGN KEY (GROUP_ID)
        REFERENCES groups (ID)
);