[Users]
select = "select * from USERS where "
create = "insert into USERS (EMAIL, PASSWORD, FIRSTNAME, LASTNAME, ADMIN) values (:email, :password, :firstname, :lastname, FALSE) "
select.login = "select *, id as ID from USERS where EMAIL = :email and binary PASSWORD = :password "
select.all = "select *, id as ID from USERS "
select.id = "select *, id as ID from USERS where ID = :id "
update.id = "UPDATE users SET EMAIL = :email, PASSWORD = :password, FIRSTNAME = :firstName, LASTNAME = :lastName WHERE ID = :id"
delete.id = "delete from USERS where id = :id "

[UserProfile]
select = "select * from users join user_profiles on users.ID = user_profiles.UID where users.ID = :id"
check = "select * from user_profiles where UID = :id"
insert = "insert into user_profiles (UID, BIO, LOCATION) values (:id, :bio, :location)"
update = "UPDATE user_profiles SET BIO = :bio, LOCATION = :location WHERE UID = :id"

[SuspendedUsers]
select.id = "select * from SUSPENDED_USERS where UID = :id ;"
create = "insert into SUSPENDED_USERS (UID) values ( :id );"
delete = "delete from SUSPENDED_USERS where UID = :id ;"

[Education]
select.all = "SELECT * FROM larabar.education;"
select.id = "SELECT * FROM larabar.education where UID = :id;"
select.pid = "SELECT * FROM larabar.education WHERE ID = :id;"
update = "UPDATE education SET education.INSTITUTION = :institution, education.LEVEL = :level, education.DEGREE = :degree WHERE ID = :id;"
delete = "Delete from education where education.ID = :id;";
insert = "insert into education (education.UID, education.INSTITUTION,education.LEVEL,education.DEGREE ) values (:uid, :institution, :level, :degree);"

[EmploymentHistory]
select.id = "SELECT * FROM larabar.employment_history WHERE UID = :id;"
select.all = "SELECT * FROM larabar.employment_history;"
update = "UPDATE employment_history SET employment_history.EMPLOYER = :employer, employment_history.POSITION = :position, employment_history.DURATION = :duration WHERE ID = :id;"
delete = "delete from employment_history where employment_history.ID = :id;"
insert = "insert into employment_history (employment_history.UID, employment_history.EMPLOYER,employment_history.POSITION,employment_history.DURATION) values (:uid, :employer, :position, :duration);"
select.pid = "SELECT * FROM larabar.employment_history WHERE ID = :id;"

[Skills]
select.pid = "SELECT * FROM larabar.skills WHERE ID = :id;"
select.id = "SELECT * FROM larabar.skills WHERE UID = :id;"
select.all = "SELECT * FROM larabar.skills;"
update = "UPDATE Skills SET Skills.TITLE = :title, Skills.DESCRIPTION = :description WHERE ID = :id;"
delete = "delete from Skills where Skills.ID = :id;"
insert = "insert into Skills (Skills.UID, Skills.TITLE,Skills.DESCRIPTION) values (:uid, :title, :description)"

[Jobs]
select.pid = "SELECT * FROM larabar.jobs WHERE ID = :id;"
select.id = "SELECT * FROM larabar.jobs WHERE UID = :id;"
select.all = "SELECT * FROM larabar.jobs;"
update = "UPDATE jobs SET jobs.TITLE = :title, jobs.AUTHOR = :author, jobs.LOCATION = :location, jobs.DESCRIPTION = :description, jobs.REQUIREMENTS = :requirements, jobs.SALARY = :salary WHERE ID = :id;"
delete = "delete from jobs where jobs.ID = :id;"
insert = "insert into jobs (jobs.UID, jobs.TITLE,jobs.AUTHOR,jobs.LOCATION,jobs.DESCRIPTION,jobs.REQUIREMENTS,jobs.SALARY ) values (:uid, :title, :author, :location, :description, :requirements, :salary)"

[Groups]
select.all = "select * from groups"
;Parameters :title, :summary, :description
insert = "insert into groups(title, summary, description) values(:title, :summary, :description);
;Parameters :id
delete = "delete from groups where ID = :id"
;Parameters :title, :summary, :description, :id
update = "update groups set title = :title, summary = :summary, description = :description where id = :id"

[JoinUsersGroups]
;Parameters :userid
select.hasUser = "SELECT GROUPS.*, join_user_group.id AS JOIN_ID FROM GROUPS INNER JOIN join_user_group ON join_user_group.USER_ID WHERE join_user_group.USER_ID = :userid AND join_user_group.GROUP_ID = GROUPS.ID;"
;Parameters :userid
select.sansUser = "SELECT GROUPS.*, join_user_group.id AS JOIN_ID FROM GROUPS INNER JOIN join_user_group ON join_user_group.USER_ID WHERE join_user_group.USER_ID != :userid AND join_user_group.GROUP_ID = GROUPS.ID;"
;Parameters :userid, :groupid
insert.user = "insert into join_user_group (USER_ID, GROUP_ID) values (:userid, :groupid);"
;Parameters :userid
delete.user = "delete from join_user_group where USER_ID = :userid;"


